---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPostCard from '../../components/BlogPostCard.astro';

export async function getStaticPaths(): any {
  const allPosts: any = await Astro.glob('../posts/*.md');

  const uniqueTags = [...new Set(allPosts.map((post: { frontmatter: { tags: any; }; }) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag: any) => {
    const filteredPosts = allPosts.filter((post: { frontmatter: { tags: string | any[]; }; }) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{tag}</title>
  </head>
  <body class="bg-nord5 dark:bg-nord1 dark:text-white">
    <BaseLayout pageTitle={tag}>
      <p>Posts tagged with {tag}</p>
      <div class="flex flex-row justify-center content-center">
          <div class="flex-1 w-1/4"></div lang="en">
          <ul class="flex-3 list-none p-0 grow">
            <!--{allPosts.map((post) => <li><a href={post.url}>{post.frontmatter.title}</a></li>)}-->
            {posts.map((post: { url: any; frontmatter: { title: any; description: any; pubDate: any; tags: any; }; }) => <BlogPostCard 
              url={post.url} 
              title={post.frontmatter.title} 
              description={post.frontmatter.description} 
              pubDate={post.frontmatter.pubDate}
              tags={post.frontmatter.tags}
            />)}
          </ul>
          <div class="flex-1 w-1/4"></div>
        </div>
    </BaseLayout>
  </body>
</html>
